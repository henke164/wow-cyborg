<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAIEhL/CBMU/wgREv8FDhH/Bg4Q/wUKCv8GDA3/CA4N/wcOD/8JEhX/DxcX/xAZGP8OGh3/Eh4f/xYf
        Hv8TICP/GSMi/xghH/8UHh7/Fh4c/xQfIP8NFxj/DhgY/w4YGf8PFxb/CxUX/wwVFv8KEhP/Bw4P/wYO
        EP8GEBb/Bw8R/wUMDP8GDQ3/BgwM/wUMDv8FDA3/BAkI/wQKCf8GDAz/CQ8O/xEaGf8TGxr/EBoa/xYh
        If8XISD/EB0f/x4nJP8dJSH/FyAg/xogG/8SHyD/FCAg/xMdHP8VHx7/EhkX/w8XFv8NFRX/DBMT/wsT
        E/8IDw//BQoL/wYND/8GDA3/ChIT/w0VFv8HDQ7/BAkK/wIHB/8DCAf/BAgH/wYNDP8LEhH/GR8b/xcg
        H/8ZIh//Iiok/x8rKP8jLyz/Ji8p/x8qJ/8fJSD/GiQh/x4mIf8aIR3/Ex0e/xchH/8VGxj/ExsZ/xEY
        Ff8LFBX/DBMR/wkODP8DCQn/BQoJ/wYNDf8PFRP/CRAP/wQJCP8GDAv/DBQU/wYLC/8BBgb/BQsL/wcO
        Df8PGBj/GyMf/yEqJv8cKSv/JzY1/y88Of8qNTH/KC8o/yMpIv8eJB7/HiUg/xohHv8RHBz/GR8b/xYb
        F/8VGxf/ERgW/w4WFf8NEQ7/BgsK/wQJCf8ECQj/BgsK/wQHBv8ECAf/CRAQ/xAaG/8ZIR7/FyEg/xAa
        Gv8HDg7/Bw4O/xMcG/8UHRz/JzIv/zRBP/8wPjv/Kjcz/ywzKv8kLCb/Iikj/x4lIP8ZIR3/DhcX/xAZ
        GP8VHBn/FRkU/xMYE/8RFhL/EBUR/woPDP8GCwv/BAcH/wMICP8FDA3/DBMS/xAaG/8VHx//Ex8g/xUf
        Hv8OFxj/Exwa/xIcHf8IDg7/EBcV/yAnI/83Pzb/MTs0/ycwK/8oMSv/Iywm/xcgH/8RHBz/EBkZ/wsU
        Ff8HDg//CA8O/wwUE/8RGBT/EBYS/w4VE/8MEhD/BgsL/wUKCf8ECAf/ChER/w8WFf8YIyX/GCIh/xYh
        Iv8eKir/Fh8c/woWLP8LG0f/FR8f/wsSEv8JEBD/GiIf/yIpI/8iLCn/GCMi/xAaGv8JExT/ChIS/w0T
        Ef8LEhL/DhYV/woTE/8LEhH/BwwK/woREP8NExL/CxAO/wsTE/8GCwv/AwgI/woREP8OFRX/DRQT/x4m
        Iv8hKSb/Hiko/x4pKP8kLiz/GSUv/xMhOf8eKy3/HSkq/xEbHf8ZIyD/GiIf/w0UFP8JERD/ChMU/w0W
        Fv8MExH/ChIQ/wcPDv8FDAr/BA0M/wkODP8IDg3/Bw0M/wwREP8IDg3/DhUV/wUIBv8OFhX/ExsZ/wwV
        Fv8NExL/Ji4q/yAsLP8bJST/GiQi/yczMv8wOTP/KTUw/yQzNf8kMzT/FyMj/xIaGP8PGRn/Bg0O/w0W
        Fv8OFhX/Bw8N/wMKCP8CCAf/BAwJ/wQLCf8ECwn/BAgG/wUJCP8IDQz/CxEQ/w0UE/8MEhD/BAcG/xMe
        Hf8VHx3/EBcV/w8VFP8mMjD/ISsn/yozLv8uPDn/Kzs6/yYxLv8wQEH/KDo9/yQ1OP8QGRn/DBQT/xIc
        HP8MFRX/ChMR/wMNC/8DCQf/AwwL/wYZF/8GIR7/BxsW/wcZFf8GGRX/BhEO/wgLCf8IDg3/EBcW/woO
        C/8FCAb/Eh4e/xUeHf8PFxb/DhUV/yMsKP8uNzL/MT88/zhJSP85TEz/Hisr/zlLTf8oPEL/IjQ3/wUL
        Cv8OGBr/ChMR/wUSD/8EDQv/AwwK/woUFf8JGhn/By0o/wo+Nv8KPjT/CC8p/wkrIv8JIBz/CQ4L/wkP
        Dv8PFxX/BgkH/wULCv8bJyb/GCAd/xAYFv8NFRX/Hysr/ycyL/8qNzT/LkBB/yg0Mv8bKSz/S1xc/z5R
        Uf8SHR//Bw0N/xAbHP8EEQ7/BA8L/wYLCf8NFhb/DBYW/wUVFP8DHBr/Bikk/wpCO/8JOTT/CSok/wUY
        Fv8HEQ//DRMQ/wgODf8DCAf/CREQ/x0qKv8RHB3/ExkW/xIWE/8iKCT/Jiwm/yYvK/8rMy3/GiAc/yk8
        Qv8xRUf/LDs8/wsUFf8SGhn/CRQQ/wQPDP8CCAf/EhsZ/xIeHP8HGRX/CSko/wkuL/8HKir/BSIi/wQi
        I/8FISD/ByMi/wsiHf8JEQ7/BgsL/wQJCf8QGhn/GCUk/xUdG/8XGxb/Dhsg/xwiH/8fJB//ICcj/xMa
        F/8dJyb/LD1A/yw5OP8ZIiL/Dxga/wgSEP8FEQ3/BQsJ/xQfHf8ZIiD/CBkW/wkjIf8MKjP/DTZC/xFG
        Tf8SRU3/EUJJ/w88Q/8ONkD/DzVB/wgUFf8HCgf/CQ8N/xciIv8cIx//GB4b/xEhKP8LJTb/Fx4c/xke
        G/8SFxb/ERkZ/x4nJf8mMjH/Iiwr/w4XF/8GCgj/BA4K/wQQDv8KFBX/FyMi/xUeHf8IGhb/BR0c/xE8
        Uf8PMEH/EzVE/wccJf8GHCL/Bxoe/xAxPP8aU2z/FDdH/wgNCv8THRz/GSAd/xYgH/8PJTD/DSg4/w8m
        M/8LEhL/Cw8O/xAaG/8hKif/ICkm/x4lIv8SHBz/ChAP/wULDP8EDQz/BA0L/w0WFf8THBv/ERoa/wgW
        Ff8FJyD/IVds/xhJT/8OTEj/EFtW/w5VTP8MSz//CC8g/xY1O/8tYHb/FB0b/xkkI/8WJiz/Eys4/xAq
        Of8RJzP/ECcz/w0SEf8TGxr/HCUk/x0jH/8YHBj/DxUT/xEZGf8HCwr/BgwL/wULDP8DBwf/DBEP/w8Y
        F/8MFhj/CxUU/wYkG/8ZTk7/HGNf/xFwZP8We3P/EVxR/w5bTv8NPC//FCkv/y5fc/8XNUP/EjBC/xQx
        Qv8SKzn/ECc0/xAnNP8PJjP/EyAk/xMbG/8SGRj/EB0j/wkSFf8LEA//EhkZ/wYKCP8GCwv/BQwN/wUN
        DP8IEA//DhcW/wgREv8HDw3/CRgW/wYpIv8ITUr/GX19/w5KTP8EIyr/CDc3/ww2LP8RMET/Gkhi/xI3
        Tv8RMUb/Ei09/xIpNv8PJzb/DyYz/w4lMv8RLDv/ESUv/xIYFv8MFBT/ChIS/wkNDP8WHBn/DRMS/wcK
        CP8EEBD/CiUk/wgWFv8GDg//ChMU/xMiJP8LFRX/Ex0c/xIzM/8MR0n/CS46/xZbZP8PR03/DEc8/w40
        Of8WO1T/ETZR/xExR/8RKzz/Eig0/xIoNP8QJjL/DiQy/xEqN/8SLDr/FCcw/xIgI/8RISb/ESMs/wwT
        Ev8QFhP/BQoK/wceHv8JIB//BxkV/woQD/8XIiP/FiMj/xklL/8KHmf/FSRY/xInK/8MTFT/HH+F/xBF
        SP8MMjX/Dj49/xI2Uf8UNkz/EjBC/xIrO/8TJzD/EiUu/xAlMf8PIy//ESg1/xQoMf8TLDr/EzBB/xUz
        Rf8UMUL/Bw4P/wgLCf8HFhb/BRsY/wUSEP8LIRz/CxEQ/xIcG/8UHhr/GSc8/xBN2f8FIHz/ERYc/wQY
        Hf8LPDv/BiIp/wQOI/8MISj/FDlU/xUzRv8ULz7/Eyw6/xElLv8RIyv/ESUv/xAjLf8RJTD/Eicy/xMq
        Nv8TLDv/FTA+/wsYHv8EBwX/BwkI/wcjIv8FHRn/BRkX/wojIP8ZICH/GSMi/xYeHP8jKyn/OFN7/yI1
        V/8PPj7/FGVm/w5PVf8UYV7/EVdR/wwhIf8TKzv/FTRG/xQtOv8TKDD/ESMr/xAiK/8PIi3/DSIv/w8j
        L/8RJS7/Eygz/xUuPP8TKDH/Bw0M/wwWGf8NGBn/BRQX/wUcHv8RT1D/FDEt/xkiIv8aIyP/DR0b/xU4
        NP8kY2P/LISG/ySWl/8Ze3b/FGpo/xRkZP8Yc23/E0M7/xMoNP8VMUD/FCs0/xMmLP8RIyr/ECIp/w4f
        KP8NICv/ECQx/xMmL/8TKDH/FS05/xAfJv8JDw//FSw4/wwhL/8GHB//EkZJ/w80Nv8OFxf/FR4e/xwi
        IP8WJCP/CUVC/xF6e/8ik5L/HX13/xdyb/8RW1T/F0Y+/xBIPv8SNzj/FTRI/xcwO/8TKzb/Eycv/xIl
        Lf8QIiv/Dh8o/w0dJf8RIy3/EiUt/xMlLP8VLDf/Dhoe/wcNDf8TKDP/Dy00/xU5Of8OGBX/BwkJ/wsV
        GP8SGRj/Jy4p/yo1Nv8YPDr/C1ZO/xZ4dP8gfn7/DENH/xArLf8VIB//GTAq/xQ0Qf8XM0P/FS45/xMn
        MP8TJS7/ESQu/w4fKP8OHib/DB0m/xAhKf8RISn/ESMs/xUqNv8RHyT/CRAQ/w4dI/8ZNT7/FCUu/xAR
        EP8TGBX/DRIR/xgfHf8nMC3/LDs//x8wNv82TVH/NmBj/xY6O/84UFf/S2Nm/zZHRv8iLy//FzRD/xcv
        Ov8UKjb/ESUv/xEkLf8QIiv/DR4n/wwbI/8MGyP/Dx8m/xEgJ/8SIir/Eycw/xQmLv8PFxj/CxIT/wsX
        HP8MFRf/EBYX/xMXFf8aHx3/KTIv/yszMP8PFRX/KTxA/2F7gP9icnH/Pk9T/2aDif9PZmb/PElF/yAw
        NP8XMT//GC02/xQoMv8PISr/DyAo/w4eJ/8MGiH/DBoh/wsZH/8OHST/Dx4l/xEhKf8RIyz/FCkz/xEf
        I/8QGRv/GB0a/yAlIv8bIyL/DREQ/w4SEf8UGRf/ExoZ/ycyMf9DVVT/SVlW/yQyMf9MYmT/XG5r/z5L
        Rv8qNjP/Fy44/xgsNP8WKTL/FCYv/xEgJv8PHSP/DRwj/w0aIf8MGB3/Cxcd/w4bIP8QHCH/ER8l/xIi
        Kv8TJS3/EyYv/xMlLP8aKCz/HCov/xcvO/8UJCz/Fx0c/x8mJf8vOjj/MTw5/yUvLf8LEhL/JTM3/0VS
        Tf83PTb/KjUz/xcsNf8WLTf/Fykx/xUnL/8TJCz/ER8l/w0bIf8NGyP/DRkg/wwYHf8MFxz/Dhkd/w8b
        If8PHSX/EB4l/xIgJv8TIir/FCYu/xQnL/8UKDL/FCs4/xUtOf8XKzP/Fh4e/xcdG/8NFBX/DRUV/yQu
        Lv8zPDr/JS4u/x0sMf8SJzH/Eygz/xUpMv8VKC//FSYt/xIiKP8PHyb/DRog/w0aIP8MGSH/DBgd/w0X
        G/8NGB3/DRoh/w8dI/8RHSL/ER8l/xIgKP8SICX/EyIo/xUmLv8UJi7/FCcw/xQqNv8UKjT/EiMq/xYk
        Kf8aKS//HC41/xYpMP8SJzD/Eygy/xMmMP8SJCz/EiQr/xMjKv8SISb/ER8k/xAfJf8NGiD/DBcc/wwY
        IP8OGBv/DRcb/w4YHP8NGR//EBwi/xEcIP8QHSL/ER8l/xIgJ/8SISj/EyQs/xIjK/8SIyv/EyYw/xUq
        Nf8UKTX/FCgy/xQnMf8TKDH/FCgw/xQmLv8SIin/EiIp/xEhJ/8RICb/ESAm/xAeI/8QHiL/ER8m/w0a
        If8MFhr/DBUZ/w0YHf8OFxr/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>